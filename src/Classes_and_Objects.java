/*********** Урок 31: Классы-обертки примитивных типов данных  ************/

/*

Классы-обертки примитивных типов данных в Java (Wrapper Classes) предоставляют объектные версии
примитивных типов. Они позволяют работать с примитивными значениями как с объектами, что необходимо
в некоторых случаях, например, при использовании коллекций Java (таких, как ArrayList),
которые работают только с объектами.

Зачем нужны классы-обертки?
___Работа с коллекциями___:
Примитивные типы не могут быть использованы в коллекциях, таких как ArrayList, HashSet и других.
Поэтому примитивы нужно обернуть в объектные аналоги для работы с ними.

___Методы объектов___:
Классы-обертки предоставляют полезные методы, такие как преобразование строк в числа или представление
примитивов в виде строки.

___Автоупаковка и автораспаковка___:
В Java есть механизм автоматического преобразования примитивов в их объектные аналоги и обратно.
Это называется автоупаковкой (autoboxing) и автораспаковкой (unboxing).

*/
public class Classes_and_Objects {
    public static void main(String[] args) {
        // Примитив
        int varIntPrimitive = 1;
        // Класс-обертка
        Integer varIntClassWrapper = 1;


        int primitiveInt = 10;
        Integer wrappedInt = primitiveInt;  // Автоупаковка

        Integer anotherWrappedInt = 20;
        int anotherPrimitiveInt = anotherWrappedInt;  // Автораспаковка

        // Преобразование строки в число:
        String numberStr = "123";
        int number = Integer.parseInt(numberStr);  // Преобразование строки в int
        System.out.println("Parsed int: " + number);  // Вывод: 123

    }

}

