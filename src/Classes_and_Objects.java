/*********** Урок 35: Анонимные классы ************/

/*
    В Java анонимный класс - это класс без имени, который определяется непосредственно внутри
    другого класса или метода. Они используются для создания одноразовых объектов, особенно в случаях,
    когда необходимо реализовать интерфейсы или переопределить методы. Они широко используются в обработке
    событий и других ситуациях, где необходима быстрая и компактная реализация.

*/
public class Classes_and_Objects {
    public static void main(String[] args) {
        /*
            ___Анонимный класс для расширения класса___
            Анонимный класс можно использовать для расширения существующего класса и переопределения его методов.
            Например, рассмотрим класс Dog.
            Здесь создается анонимный класс, который наследует Dog и переопределяет метод speak().
            В результате при вызове speak() будет выведено "Bark!", а не "Woof!", как это было бы в обычном классе Dog.
        */
        Dog myDog = new Dog() {
            @Override
            public void speak() {
                System.out.println("Bark!");
            }
        };
        myDog.speak(); // Bark!


        /*
            ___Анонимный класс для реализации интерфейса___
            Предположим, у нас есть интерфейс AbleToEat, и мы хотим создать анонимный класс,
            который реализует этот интерфейс:
            В этом примере анонимный класс реализует метод eat() интерфейса AbleToEat
            и сразу создается в момент вызова конструктора new Animal().
        */
        AbleToEat ableToEat = new AbleToEat() {
            @Override
            public void eat() {
                System.out.println("Someone is eating");
            }
        };
        ableToEat.eat(); // Someone is eating

    }

}


class Dog {
    public void speak() {
        System.out.println("Woof!");
    }
}


interface AbleToEat {
    void eat();
}
