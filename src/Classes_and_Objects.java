/*********** Урок 21: Ключевое слово static ************/

/*
Ключевое слово static в Java используется для создания полей (переменных), методов, блоков или вложенных классов,
которые принадлежат самому классу, а не экземпляру объекта. Это означает, что статические элементы могут использоваться
без создания объекта класса.

____Особенности ключевого слова static____:

Статические поля (переменные класса):
- Статическое поле объявляется с ключевым словом static. Оно принадлежит классу и общедоступно для всех экземпляров класса.
- Все объекты класса разделяют одно и то же статическое поле.
- Доступ к статическим полям можно получить через имя класса, не создавая объект.

Статические методы:
- Статические методы также принадлежат классу, а не его экземплярам.
- Эти методы могут вызываться без создания объекта.
- Статические методы могут обращаться только к статическим полям и вызывать другие статические методы,
поскольку они не привязаны к конкретному объекту.

Статический блок инициализации:
- Статический блок инициализации используется для инициализации статических полей.
- Выполняется один раз при первом обращении к классу (до создания экземпляра или вызова статического метода).

Статические вложенные классы:
Внутри классов можно создавать статические вложенные классы, которые не требуют создания объекта внешнего класса для
использования.
*/
public class Classes_and_Objects {
    public static void main(String[] args) {

        // Все объекты класса разделяют одно и то же статическое поле numberOfCars. То есть, при создании объекта этого класса
        // будет увеличиваться значение статического поля numberOfCars. Давайте это проверим
        Car car1 = new Car("Jaguar", "V8");
        Car car2 = new Car("Bugatti", "W16");
        System.out.println("Результат: " + Car.numberOfCars); // Результат: 2


        int totalArms = RoboticArm.numOfArms; // Доступ к статическому полю через имя класса.
        System.out.println("Результат: " + MathUtils.sumOfInts(1, 2, 3)); // Результат: 2

    }

}
class Car {

    static int numberOfCars;

    private String name;
    private String engine;

    public Car(String name, String engine) {
        this.name = name;
        this.engine = engine;
        numberOfCars++;
    }

    // getters and setters
}


class RoboticArm {
    static int numOfArms = 0; // Переменная, общая для всех экземпляров класса.
}

// Пример статического метода
class MathUtils {
    public static int sumOfInts(int i, int...nums) {
        int sum = i;

        for(int num : nums) {
            sum += num;
        }
        return sum;
    }
}
