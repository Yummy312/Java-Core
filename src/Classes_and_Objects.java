import java.util.List;

/*********** Урок 34: Wildcards(Generics) ************/

/*
    Wildcards (Подстановочные символы) в Generics позволяют создавать более гибкие обобщенные классы,
    методы и интерфейсы, которые могут работать с различными типами данных. Подстановочные символы (?)
    используются для представления неизвестного типа и могут быть ограничены с помощью границ,
    чтобы указать, какие типы могут быть использованы.
*/
public class Classes_and_Objects {
    public static void main(String[] args) {

    }
    /*
        1. Неразрешенные Wildcards (?)
        Это самый общий случай использования Wildcard. Он позволяет использовать любой тип данных,
        но с ним нельзя выполнять операции, специфичные для определенного типа
        (например, не можно добавлять элементы в коллекцию).

        Здесь метод printList может принимать список с любым типом данных, благодаря использованию
        подстановочного символа ?.
    */
    public static void printList(List<?> list) {
        for (Object element : list) {
            System.out.println(element);
        }
    }

    /*
        2. Upper-Bounded Wildcards (? extends T)
        Когда нужно ограничить типы, которые могут быть использованы с подстановочным символом,
        можно применить верхнюю границу. Она указывает, что тип должен быть либо самим типом T, либо его подклассом.

        В этом примере метод sum использует Wildcard с верхней границей (? extends Number), что позволяет передавать
        в него списки любого типа, который наследуется от Number (например, Integer, Double).
    */
    public static double sum(List<? extends Number> list) {
        double total = 0.0;
        for (Number num : list) {
            total += num.doubleValue();
        }
        return total;
    }

    /*
        3. Lower-Bounded Wildcards (? super T)
        Подстановочные символы с нижней границей (? super T) позволяют указать, что элементы в коллекции
        должны быть либо объектами типа T, либо его суперклассами. Это полезно, когда вам нужно работать
        с коллекциями, в которые можно добавлять элементы определенного типа.

        Здесь метод addNumbers использует нижнюю границу для Wildcard. Это позволяет добавлять элементы
        типа Integer в коллекции, которые могут содержать объекты типа Number или его суперклассы (например, Object).

    */
    public static void addNumbers(List<? super Integer> list) {
        list.add(10);
        list.add(20);
    }

}

