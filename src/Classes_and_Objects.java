/*********** Урок 30: Приведение примитивных типов  ************/

/*
Приведение примитивных типов данных в Java позволяет преобразовывать значения одного типа в другой.
В Java существуют восемь примитивных типов данных:

Целочисленные: byte, short, int, long
Вещественные: float, double
Логический тип: boolean
Символьный тип: char

___Виды приведения___:
- Неявное (автоматическое) приведение — когда более "мелкий" тип данных
автоматически преобразуется в более "крупный".
Пример неявного приведения:
Преобразование от int к long
Преобразование от float к double

- Явное приведение — когда необходимо вручную указать преобразование. Явное приведение нужно,
когда преобразуется "больший" тип в "меньший". Это может привести к потере точности или
даже данных, поэтому требуется явное указание приведения.
Пример явного приведения:
Преобразование от double к int
Преобразование от long к short

*/
public class Classes_and_Objects {
    public static void main(String[] args) {

        /*
        В этом примере тип int автоматически преобразуется в long, а затем long преобразуется
        в float. Это приведение происходит автоматически, так как старший тип может хранить
        значение младшего без потери данных.
        */
        int num = 100;
        long longNum = num;  // Неявное приведение от int к long

        System.out.println("long: " + longNum);    // Вывод: 100



        /*
        В этом примере значение типа double приводится к типу int.
        Это приведение происходит явно с использованием оператора приведения (int),
        так как часть значения может быть потеряна — дробная часть числа будет отброшена.
        */
        double doubleNum = 100.99;
        int intNum = (int) doubleNum;  // Явное приведение от double к int

        System.out.println("double: " + doubleNum);  // Вывод: 100.99
        System.out.println("int: " + intNum);        // Вывод: 100



        char letter = 'A';
        int code = letter;  // Неявное приведение от char к int
        System.out.println("Code of 'A': " + code);  // Вывод: 65


    }

}

